#include "catch.hpp"
#include "../rconv.h"
#include "../../../../generalTools/testing.h"


TEST_CASE( "rconv" ){
  GIVEN( "" ){
    WHEN( "results of one is fed into the next (round 1)" ){
      std::vector<double> S1 { 5.61770E-2, 5.40312E-2, 5.20115E-2, 5.00629E-2, 
        4.81832E-2, 4.63700E-2, 4.46212E-2, 4.29347E-2, 4.13083E-2, 3.97402E-2, 
        3.82282E-2, 3.67707E-2, 3.53657E-2, 3.40115E-2, 3.27063E-2, 3.14486E-2, 
        3.02366E-2, 2.90689E-2, 2.79439E-2, 2.68601E-2, 2.58162E-2, 2.48107E-2, 
        2.38424E-2, 2.29099E-2, 2.20121E-2, 2.11476E-2, 2.03153E-2, 1.95142E-2, 
        1.87430E-2, 1.80008E-2, 1.72865E-2, 1.65992E-2, 1.59378E-2, 1.53014E-2, 
        1.46893E-2, 1.41004E-2, 1.35339E-2, 1.29891E-2, 1.24652E-2, 1.19614E-2, 
        1.14769E-2, 1.10112E-2, 1.05634E-2, 1.01329E-2, 9.71923E-3, 9.32156E-3, 
        8.93940E-3, 8.57215E-3, 8.21928E-3, 7.88024E-3, 7.55453E-3, 7.24164E-3, 
        6.94109E-3, 6.65244E-3, 6.37522E-3, 6.10901E-3, 5.85340E-3, 5.60798E-3, 
        5.37236E-3, 5.14618E-3, 4.92908E-3, 4.72071E-3, 4.52073E-3, 4.32883E-3, 
        4.14470E-3, 3.96803E-3, 3.79854E-3, 3.63595E-3, 3.48000E-3, 3.33042E-3, 
        3.18697E-3, 3.04941E-3, 2.91751E-3, 2.79104E-3, 2.66981E-3, 2.55359E-3, 
        2.44219E-3, 2.33542E-3, 2.23310E-3, 2.13506E-3, 2.04111E-3, 1.95110E-3, 
        1.86487E-3, 1.78228E-3, 1.70316E-3, 1.62739E-3, 1.55484E-3, 1.48536E-3, 
        1.41883E-3, 1.35515E-3, 1.29418E-3, 1.23582E-3, 1.17997E-3, 1.12652E-3, 
        1.07537E-3, 1.02643E-3, 9.79611E-4, 9.34819E-4, 8.91974E-4, 8.50995E-4},
      X5 { 0.205 },
      ANK { 4.40453E-1, 4.96664E-1, 1.10079E-2, 1.24127E-2, 1.37584E-4, 
        1.55142E-4, 1.14647E-6, 1.29279E-6, 7.16526E-9, 8.07969E-9, 3.58255E-11, 
        4.03976E-11, 1.49271E-13, 1.68320E-13, 5.33104E-16, 6.01139E-16, 
        1.66593E-18, 1.87854E-18, 4.62757E-21, 5.21814E-21},
      betas (100), correctS1(100);
      for (size_t i = 0; i < betas.size(); ++i){ betas[i] = i*0.08; }
      double T = 0.0255;
      std::vector<int> nMax { 0, 0 };

      rconv( nMax, X5, ANK, T, S1, betas );
      correctS1 = { 2.47434E-2, 2.37982E-2, 2.29086E-2, 2.20504E-2, 2.12224E-2, 
        2.04238E-2, 1.96536E-2, 1.89107E-2, 1.81944E-2, 1.75037E-2, 1.68378E-2, 
        1.61958E-2, 1.55769E-2, 1.49805E-2, 1.44056E-2, 1.38516E-2, 1.33178E-2, 
        1.28035E-2, 1.23080E-2, 1.18306E-2, 1.13708E-2, 1.09280E-2, 1.05015E-2, 
        1.00907E-2, 9.69531E-3, 9.31455E-3, 8.94798E-3, 8.59511E-3, 8.25545E-3, 
        7.92854E-3, 7.61393E-3, 7.31118E-3, 7.01987E-3, 6.73960E-3, 6.46996E-3, 
        6.21058E-3, 5.96109E-3, 5.72113E-3, 5.49036E-3, 5.26845E-3, 5.05508E-3, 
        4.84992E-3, 4.65270E-3, 4.46311E-3, 4.28087E-3, 4.10572E-3, 3.93739E-3, 
        3.77564E-3, 3.62021E-3, 3.47088E-3, 3.32742E-3, 3.18961E-3, 3.05723E-3, 
        2.93009E-3, 2.80799E-3, 2.69074E-3, 2.57815E-3, 2.47005E-3, 2.36628E-3, 
        2.26665E-3, 2.17103E-3, 2.07925E-3, 1.99117E-3, 1.90665E-3, 1.82555E-3, 
        1.74773E-3, 1.67308E-3, 1.60147E-3, 1.53278E-3, 1.46689E-3, 1.40371E-3, 
        1.34312E-3, 1.28503E-3, 1.22932E-3, 1.17592E-3, 1.12474E-3, 1.07567E-3, 
        1.02864E-3, 9.83581E-4, 9.40396E-4, 8.99017E-4, 8.59372E-4, 8.21393E-4, 
        7.85013E-4, 7.50167E-4, 7.16794E-4, 6.84835E-4, 6.54233E-4, 6.24932E-4, 
        5.96881E-4, 5.70028E-4, 5.44325E-4, 5.19724E-4, 4.96181E-4, 4.73652E-4, 
        4.52096E-4, 4.31473E-4, 4.11744E-4, 3.92873E-4, 0 };

      REQUIRE( ranges::equal(S1,correctS1,equal) );

    } // WHEN
  } // GIVEN



  GIVEN( "a small x value (xVal < 0.05)" ){
    WHEN( "results of one is fed into the next (round 1)" ){

      std::vector<double> S1 { 5.61770E-2, 5.40312E-2, 5.20115E-2, 5.00629E-2, 
        4.81832E-2, 4.63700E-2, 4.46212E-2, 4.29347E-2, 4.13083E-2, 3.97402E-2, 
        3.82282E-2, 3.67707E-2, 3.53657E-2, 3.40115E-2, 3.27063E-2, 3.14486E-2, 
        3.02366E-2, 2.90689E-2, 2.79439E-2, 2.68601E-2, 2.58162E-2, 2.48107E-2, 
        2.38424E-2, 2.29099E-2, 2.20121E-2, 2.11476E-2, 2.03153E-2, 1.95142E-2, 
        1.87430E-2, 1.80008E-2, 1.72865E-2, 1.65992E-2, 1.59378E-2, 1.53014E-2, 
        1.46893E-2, 1.41004E-2, 1.35339E-2, 1.29891E-2, 1.24652E-2, 1.19614E-2, 
        1.14769E-2, 1.10112E-2, 1.05634E-2, 1.01329E-2, 9.71923E-3, 9.32156E-3, 
        8.93940E-3, 8.57215E-3, 8.21928E-3, 7.88024E-3, 7.55453E-3, 7.24164E-3, 
        6.94109E-3, 6.65244E-3, 6.37522E-3, 6.10901E-3, 5.85340E-3, 5.60798E-3, 
        5.37236E-3, 5.14618E-3, 4.92908E-3, 4.72071E-3, 4.52073E-3, 4.32883E-3, 
        4.14470E-3, 3.96803E-3, 3.79854E-3, 3.63595E-3, 3.48000E-3, 3.33042E-3, 
        3.18697E-3, 3.04941E-3, 2.91751E-3, 2.79104E-3, 2.66981E-3, 2.55359E-3, 
        2.44219E-3, 2.33542E-3, 2.23310E-3, 2.13506E-3, 2.04111E-3, 1.95110E-3, 
        1.86487E-3, 1.78228E-3, 1.70316E-3, 1.62739E-3, 1.55484E-3, 1.48536E-3, 
        1.41883E-3, 1.35515E-3, 1.29418E-3, 1.23582E-3, 1.17997E-3, 1.12652E-3, 
        1.07537E-3, 1.02643E-3, 9.79611E-4, 9.34819E-4, 8.91974E-4, 8.50995E-4},
      X5 { 0.205, 0.48 },
      ANK { 4.40453E-1, 4.96664E-1, 1.10079E-2, 1.24127E-2, 1.37584E-4, 
        1.55142E-4, 1.14647E-6, 1.29279E-6, 7.16526E-9, 8.07969E-9, 3.58255E-11, 
        4.03976E-11, 1.49271E-13, 1.68320E-13, 5.33104E-16, 6.01139E-16, 
        1.66593E-18, 1.87854E-18, 4.62757E-21, 5.21814E-21},
      betas (100), correctS1(100);
      for (size_t i = 0; i < betas.size(); ++i){ betas[i] = i*0.08; }
      double T = 0.0255;
      std::vector<int> nMax { 0, 0 };

      rconv( nMax, X5, ANK, T, S1, betas );
      correctS1 = { 1.22891E-2, 1.18197E-2, 1.13779E-2, 1.09516E-2, 1.05404E-2, 
        1.01438E-2, 9.76124E-3, 9.39230E-3, 9.03652E-3, 8.69347E-3, 8.36273E-3, 
        8.04388E-3, 7.73653E-3, 7.44028E-3, 7.15477E-3, 6.87962E-3, 6.61450E-3, 
        6.35905E-3, 6.11294E-3, 5.87586E-3, 5.64750E-3, 5.42755E-3, 5.21572E-3, 
        5.01173E-3, 4.81532E-3, 4.62620E-3, 4.44414E-3, 4.26888E-3, 4.10019E-3, 
        3.93782E-3, 3.78157E-3, 3.63120E-3, 3.48652E-3, 3.34731E-3, 3.21340E-3, 
        3.08457E-3, 2.96066E-3, 2.84148E-3, 2.72687E-3, 2.61665E-3, 2.51067E-3, 
        2.40878E-3, 2.31083E-3, 2.21666E-3, 2.12615E-3, 2.03916E-3, 1.95556E-3, 
        1.87522E-3, 1.79803E-3, 1.72386E-3, 1.65261E-3, 1.58416E-3, 1.51842E-3, 
        1.45527E-3, 1.39463E-3, 1.33639E-3, 1.28047E-3, 1.22678E-3, 1.17524E-3, 
        1.12576E-3, 1.07827E-3, 1.03269E-3, 9.88946E-4, 9.46967E-4, 9.06686E-4, 
        8.68038E-4, 8.30961E-4, 7.95393E-4, 7.61277E-4, 7.28556E-4, 6.97175E-4, 
        6.67082E-4, 6.38228E-4, 6.10563E-4, 5.84042E-4, 5.58618E-4, 5.34249E-4, 
        5.10893E-4, 4.88509E-4, 4.67061E-4, 4.46509E-4, 4.26819E-4, 4.07956E-4, 
        3.89888E-4, 3.72581E-4, 3.56006E-4, 3.40133E-4, 3.24934E-4, 3.10381E-4, 
        2.96449E-4, 2.83112E-4, 2.70346E-4, 2.58128E-4, 2.46435E-4, 2.35246E-4, 
        2.24540E-4, 2.14297E-4, 2.04499E-4, 1.95126E-4, 0 };

      REQUIRE( ranges::equal(S1,correctS1,equal) );
    } // WHEN
  } // GIVEN
} // TEST_CASE
